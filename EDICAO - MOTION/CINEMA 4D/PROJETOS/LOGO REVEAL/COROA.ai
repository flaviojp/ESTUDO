%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 21.0.0
%%For: (VMIX-01) ()
%%Title: (COROA.ai)
%%CreationDate: 9/17/2019 9:53 AM
%%Canvassize: 16383
%%BoundingBox: 161 213 631 561
%%HiResBoundingBox: 161.6042 213.231 630.2842 560.1749
%%DocumentProcessColors: Cyan Magenta Yellow
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 400.4995 399.5 400.4995 399.5
%AI3_TileBox: 15.5197 105.52 784.4797 694.48
%AI3_DocumentPreview: None
%AI5_ArtSize: 500.0005 500
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 3
%AI8_OpenToView: -337 727.0566 1.2017 1555 914 18 1 0 78 121 0 0
%AI5_OpenViewLayers: 773
%%PageOrigin:102 -21
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 96 8
%%BeginData: 16745 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD3FFFC8CEFD7DFFC8C7C7CEFD7BFFC8C8C7C8C7CEFD79FFC8C7C7
%C8C7C8C7CEFD77FFC9C8C7CDC8C8C7CDC7CFFD75FFCAC8C7C8C7C8C7C8C7
%C8C7CFFD74FFCDC7CDC8C8C7C8C7C8C7C8C8FD73FFCEC7C8C7C8C1C8A5C7
%C7C8C7C7C9FD72FFC8C8C7CDC7C8C7CDC7C8C7CDC7C8CFFD70FFC8C8C7C8
%C7C7C7C8C7C8C1C8C7C8C7C9FD6FFFCFC8C7CDC8C7C7CDC7C8C7C8C7C8C7
%C8C7FD6FFFCEC7C8C7C89FC8C7C8C7C8A5C7C7C8C7C7C8FD6EFFC7C8C7CD
%C1C8C7CDC8C8C7CDC7C8C7CDC7C8CFFD6CFFC8C7C7C89FC7C7C8C7C8C7C8
%C7C89FC8C7C8C7CEFD6BFFCFC8C7CDC8C7C7CDC7C8C7CDC7C8C7C7C1CDC7
%C8C8FD6BFFCEC7C8C7C79FC8C7C8C7C8C7C8C7C8C7C1C7C8C7C7C9FD6AFF
%C8C8C7CDC1C8C7CDC8C8C7CDC8C8C7CDC1C7C8CDC7CDFD69FFC9C8C7C89F
%C1C7C8C7C8C7C8C7C8C7C8C7C89EC8C7C8C7CFFD34FFCFC9FD32FFCEC7CD
%C8C1C7CDC7C8C7CDC7C8C7CDC7C8C7C7C1CDC7C8C8FD32FFCFC9C7C7C8FD
%31FFC7C8C7C79EC8C7C8C7C8C7C8C7C8C7C8C7C8C7C1C7C8C7C8CFFD2FFF
%CAC8C7C7C8C7CDC7CECFFD2DFFCEC8C7CDC1C8C7CDC8C8C7CDC8C8C7CDC8
%C8C7CDC1C7C8CDC7CFFD2EFFC9C8C7CDC8C8C7C7C8C7C8C9FD2CFFCDC7C8
%9FC1C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C89EC8C7C8C8FD2BFFCFCEC7C8
%C7C8C7CECFC7C8C7CDC7C8C7CECFFD29FFC7CDC8C19FCDC7C8C7CDC7C8C7
%CDC7C8C7CDC7C8C7C1C1CDC7C8CFFD28FFCFC8C8C7C8C7CDC7C8C9CAC8C7
%C8C7C8C7C8C7C8C8CFCAFD25FFC9C7C7C89EC7C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C89FC1C7C8C7CEFD26FFC9C8C7C7C7C8C7C8C7C8C7FFFFC8C8C7
%CDC8C8C7CDC8C8C7CDC9FD24FFCEC7CDC1C1C7CDC8C8C7CDC8C8C7CDC8C8
%C7CDC8C8C7CD9FC8C7CDC8FD23FFCFCEC8CDC7C8C7CDC8C8C7CDC7CEFFFF
%CFC7C7C7C8C7C8C7C8C7C8C7C7C7C8C9FD21FFC7C8C7C1C1C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C19FC8C7C8CFFD1FFFCFCEC8C8C7C8C7C8C7
%C8C7C8C7C8C1C8C9FFFFCFCDC7C8C7CDC8C8C7CDC7C8C7C8C7C8C7CECFFD
%1DFFC9C8C8C89EC8C8C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7C1C7C8
%C7CFFD1DFFCFC8CDC7C8C7CDC7C8C7CDC7C8C7C8C7C8C7FD04FFC8C8C7C7
%9FC8C7C8C7C8C7C8C7C8C7C8C7C7C7CECAFD1AFFC8C7C89EC1C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C898C7C7C7C8FD1AFFCFC8C8C7C7C7C8
%C7C8C7C8C7C8C7C8C1C79FC8C7C8FD04FFCFC7C8C7C8C1C7C7CDC8C8C7CD
%C8C8C7CDC8C8C7CDC8CECFFD17FFC7CDC7C1C7CDC8C8C7CDC8C8C7CDC8C8
%C7CDC8C8C7CDC8C8C8C7C1CDC7CDFD18FFC9CDC7CDC7C8C7CDC8C8C7CDC8
%CDC7C8C1C7C7CDC8C8C9FD04FFCFC8C7C8C7C8C1C19FC7C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C8CECFFD13FFC9C7C7C79EC8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C1C1C7C8C7CFFD14FFC9C8C7C7C7C8C7C8C7C8C7C8
%C7C8C7C8C1C19FC8C7C8C7C8C7FD06FFC8C8C7C8C7CDC8C8C1C7C1C7C7CD
%C8C8C7CDC7C8C7CDC7C8C7C8C8CFCFFD10FFCEC7C89EC7C8C8C7CDC7C8C7
%CDC7C8C7CDC7C8C7CDC7C8C7CDC8C89EC7C8C8C9FD11FFC9CEC7C8C7C8C7
%CDC7C8C7CDC8C8C7C8C1C79FC8C7C8C7CDC7C8C7CEFD06FFCFC7C8C7C8C7
%C8C7C8C7C79FC19EC7C7C8C7C8C7C8C7C8C7C8C7C8C7C8C8CECFFD0DFFC7
%C8C1C09FC8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C798C8C7
%C8CFFD0DFFC9C8C7C7C7C8C7C8C7C8C7C8C7C8C7C89FC19EC1C1C8C7C8C7
%C8C7C8C7C7C9FD07FFCDC7C8C7CDC8C8C7CDC8CDC7C7C1C1C1C8C8CDC7CD
%C8C8C7CDC8C8C7C8C8FD0DFFCFCDC7C89ECDC8C8C7CDC8C8C7CDC8C8C7CD
%C8C8C7CDC8C8C7CDC8CDC7C1C7C8C7FD0EFFCEC7CDC8C8C7CDC8C8C7CDC8
%C8C1C7C1C1C1CDC8CDC7CDC8C8C7CDC8C8C8FD08FFC8C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C19EC19FC7C7C8C7C8C7C8C7C7C8FD0FFFCACEC1C1C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C798C7C8CFFD0FFFC9C7
%C8C7C8C7C8C7C89FC19EC19FC8C7C8C7C8C7C8C7C8C7C8C7C8C7C9FD08FF
%CFC7CDC7C8C7CDC7C8C7CDC7C8C7CDC8C8C1C79FC19EC7C7C8C7C8C8FD12
%FFCE9EC7C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CD9EC1C9FD
%12FFCDC7CDC8C89FC19EC19FC8C8CDC7CDC7C8C7CDC7C8C7CDC7C8C7C8CF
%FD08FFCFC8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C1C198C1C7C8C7
%CFFD13FFC898C7C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C89FC0C8
%FD13FFCAC8C7C898C19FC8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%FD0AFFC9CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8CDC8C7C1CDC7CEFD
%15FFC19ECDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8CDC7C1C1FD15FFC9
%CDC7C1C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CEFD0AFFCFC7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C898C7C7C8CAFD15FFC99E9F
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C798CFFD16FFC7C89EC1C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C7C9FD0BFFC8C7CDC7C8C7CDC7
%C8C7CDC7C8C7CDC7C8C7CDC7C1C7C8C8FD17FF9EC1C7CDC7C8C7CDC7C8C7
%CDC7C8C7CDC7C8C7C89EC7CFFD16FFCEC7C89EC8C7CDC7C8C7CDC7C8C7CD
%C7C8C7CDC7C8C7C8C8FD0CFFC9C7C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C19EC8C7CFFD17FFC898C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C89FC0
%C8FD17FFC9C7C7C19FC8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7CEFD0C
%FFCFC7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7C89EC8C7CDCFFD17FFC8C1
%C1CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C8C7C0CEFD17FFCFC7CDC1C1C7CD
%C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDCFFD0DFFC8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C89FC1C7C8C7CFFD17FFCE9EC1C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C898C1C8FD17FFCAC8C7C798C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C8FD0EFFC9C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC8C19ECDC7C8CF
%FD17FFC8C19FC8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C1C1CEFD17FFCFC7
%C8C7C1C1CDC7CDC7C8C7CDC7C8C7CDC7C8C7CDC7CEFD0EFFCFC7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C89EC1C7C8C7CFFD16FFCFC89EC1C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C898C7C7FD17FFC9C7C7C898C1C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8CAFD0FFFCEC7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C1C1
%CDC8C8C9FD16FFCFC7C7C1CDC7CDC8C8C7CDC8C8C7CDC8C8C7CDC7C1C7CD
%CFFD16FFCEC7C8C7C1C1CDC7CDC8C8C7CDC8C8C7CDC8C8C7CDC8FD10FFC9
%C7C7C8C7C8C7C8C7C8C7C8C7C8C7C89EC7C7C8C7C8CFFD15FFC8C89EC1C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C898C7C7CEFD16FFC7C8C7C89EC1C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7CEFD11FFC7C8C7CDC7C8C7CDC7C8C7CDC7
%C8C7C1C1CDC7CDC7CEFD14FFCAC8C7C19FCDC7C8C7CDC7C8C7CDC7C8C7CD
%C7C8C7C1C1CDC7CFFD14FFC9C8C7CDC8C19FCDC7C8C7CDC7C8C7CDC7C8C7
%CDC7C8CFFD11FFC8C7C8C7C8C7C8C7C8C7C8C7C8C7C89EC1C7C8C7C8C7CF
%FD13FFC8C7C898C1C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C89EC1C7C7C8FD
%13FFC9C8C7C8C7C898C7C7C8C7C8C7C8C7C8C7C8C7C8C7C8C8FD12FFCEC8
%C7CDC8C8C7CDC8C8C7CDC8C8C7C89EC8C8CDC8C8C7FD12FFCEC7CDC7C1C7
%CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C8C79EC8C7CDC9FD11FFCFCDC7C8C7
%CDC1C1C7CDC8C8C7CDC8C8C7CDC8C8C7CDC7CFFD13FFC7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C19EC8C7C8C7C7C7CFFD0FFFCEC7C8C7C19EC8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C1C1C1C8C7C8C9FD0FFFCAC8C7C8C7C8C7C1
%9FC8C7C8C7C8C7C8C7C8C7C8C7C8C7C8CFFD13FFCEC7C8C7CDC7C8C7CDC7
%C8C7CDC7CDC1C1C1CDC7CDC8C8C7CEFD0DFFCEC7C8C8C898C7C8C8C7CDC7
%C8C7CDC7C8C7CDC7C8C7CDC8C89EC1C8C8C7C8C9FD0DFFC9C8C7C8C7CDC8
%C198C8C8C8C7CDC7C8C7CDC7C8C7CDC7C8C8FD14FFC9C7C7C8C7C8C7C8C7
%C8C7C8C7C8C7C89EC0C7C8C7C8C7C8C7C8C9FD09FFC9C8C7C8C7C89E9EA5
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C798C7C7C8C7C7C8CFFD08FF
%CACFC8C7C7C8C7C8C7C798C7C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7CFFD15
%FFC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CD9EC1C7CDC8C8C7CDC7C8C8CECE
%CFCFFFCFCFC8CDC7C8C7CDC7C1C1CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7
%CDC8C8C7C19EC8C7CDC8C8C7CECECFCFFFCFCFC9CDC7C8C7CDFD04C89EC1
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC7C8CFFD15FFCEC7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C898C1C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C7C7C8C7C8C7
%C19EC8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C1C19EC8C7C8C7
%C8C7C8C7C8C7C8C7C7C7C8C7C8C7C8C7C798C1C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C8FD16FFC9C8C7C8C7CDC7C8C7CDC7C8C7CDC7C8C7C89EC1C7
%CDC8C8C7CDC7C8C7C8C7C8C7CDC7C8C7CDC7C198C8C8C8C7CDC7C8C7CDC7
%C8C7CDC7C8C7CDC7C8C7CDC7CDC1C1C1C8C7CDC7C8C7C8C7C8C7CDC7C8C7
%CDC7C8C7C89EC1C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CFFD17FFC7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C7989E9FC8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C89FC198C7C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C89FC09EC8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C198C1C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8CAFD17FFCEC7C8C7CDC8C8C7CDC8C8C7CDC8
%C8C7CDC8C89FC1C1C8C7CDC8CDC7CDC8C8C7CDC8C8C1C19EC8C8CDC8C8C7
%CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC7C19EC8C8CDC7CDC8
%C8C7CDC8CDC8CDC7C198C7C8CDC7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C9
%FD18FFC9C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C89FC198C19FC8C7
%C8C7C8C7C89FC7989E9EC8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C198C19FC7C7C8C7C8C7C8C1C198C09EC7C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7CFFD19FFC8C8C7C8C7CDC7C8C7CD
%C7C8C7CDC7C8C7CDC8CDC7C79FC198C19FC19EC19EC198C1C7C8C7CDC7C8
%C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC8C79EC1
%9EC19EC19FC198C19EC1C1CDC8C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8
%C7CDFD1AFFC9C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C7
%9EC19EC19EC19FC7C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C89FC79EC19EC19EC19FC8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C7C8FD1AFFCFCDC8C8C7CDC8C8C7CD
%C8C8C7CDC8C8C7CDC8C8C7CDC8CDC8CDC8CDC7CDC8CDC7CDC8C8C7CDC8C8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CD
%C8CDC7CDC8CDC8CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8
%C7CFFD1BFFC8C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8FD1CFFCEC7CDC7C8C7CDC7C8C7CDC7
%C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7
%CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7
%C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7C8C9FD1C
%FFCAC7C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C8C7CFFD1DFFC8CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CD
%C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CEFD1EFFCEC7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C7C9FD1EFFCFC8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CD
%C7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8
%C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CD
%C7C8C7CDC7C8C7CDC7C8C7C8C7FD20FFC8C7C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8FD20FFCFC7CDC8C8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CD
%C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CD
%CEFD20FFCFC8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7FD22FFC8C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8
%C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CD
%C7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8
%C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7CEFD22FFCFC7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C7C9FD22FFCFC8C7CD
%C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CD
%C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8FD
%24FFC8C7C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7CEFD24FFCFC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8
%C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CD
%C7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8
%C7CDC7C8C7CDC7C8C9FD24FFCAC8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7FD26FFC9C8C7CDC8C8C7CDC8C8C7CDC8C8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CD
%C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC7CEFD26FFCFC7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C9FD26FFCFCDC7C8C7CDC7C8
%C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CD
%C7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8
%C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C8FD28FFC8C7C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C9FD28FFCFC7C8C7CD
%C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8
%C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CD
%C8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8C7CDC8C8CFFD28FFCFC8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C8FD2AFFC9C8C7C8
%C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CD
%C7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8
%C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CEFD2AFFCFC7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C7CAFD2BFFCDC7C8C7CDC7
%C8C7C8C7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7
%CDC8C8C7CDC8C8C7CDC8C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7
%C8C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C8C8FD2CFFCFFFCFCFCACFCFCFC9
%CFC9CFC9CEC9CEC9CEC9CEC8CEC8C9C8CDFD0AC8C7C8C7C8C7C8C7C8C7C8
%C7C8C7FD08C8CDC8C8C8CEC8C9C8CEC9CEC9CEC9CEC9CFC9CFCACFCFCFCA
%FFCFFD2CFFCFCFC9CFC9CFC9CFCACFC9CFCACFC9CFC9CFC9CFC9CFC9CFC9
%CEC9CFC9CEC9CEC9CEC8CEC8C9FD0BC8C9C8CEC9CEC9CEC9CEC9CFC9CFC9
%CFC9CFC9CFC9CFC9CFC9CFC9CFCACFC9CFCACFC9CFCFFD2AFFC1C7C0C19E
%C7C0C19EC7C0C19EC7C0C19EC7C0C19EC7C0C19EC7C0C19EC7C0C19EC7C0
%C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C19EC7C0C19EC7C0C19E
%C7C0C19EC7C0C19EC7C0C19EC7C0C19EC7C0C19EC7C8FD28FFC8C7C1C7C1
%C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1
%C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1
%C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C8FD26FFCAC7C0
%C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0
%C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0
%C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7CAFD25
%FFCFC0C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7
%C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7
%C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7
%C0CFFD25FFC9C7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79E
%C7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0
%C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79E
%C7C0C79EC7C9FD26FFC7C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1
%C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1
%C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1C7C1
%C7C1C7C1C7C1C7C7FD27FFCFC0C0C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7
%C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7
%C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7
%C0C7C0C7C0C7C0C0C0CFFD28FFCFC8C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C8CFFD2DFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCF
%FD1AFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Deform.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (PlanetX.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Line Plugin Group) (Line artwork) (Illustrator.exe)
%AI8_PluginGroupInfo
(Adobe Sketch Plugin Group) (Sketch artwork) (Illustrator.exe)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligraphicBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathfinderS.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 1 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ Touch Calligraphic Brush/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(1 pt. Oval)
(1 1 1 40 40 -20 10 0 0 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Touch Calligraphic Brush)
(1 12 12 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.839231 0.830533 0.729427 0.799985 ([Registration]) 0 Xs
([Registration])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 0 1 0 0 1 2 79 255 79 0 50 Lb
(BACKGROUND) Ln
1 A
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 3 79 79 255 0 50 Lb
(OBJECTS) Ln
0 A
u
0 O
0.039948 0.231693 0.781338 0 0.952941 0.819608 0.360784 Xa
0 J 0 j 1 w 10 M []0 d0 XR
386.1422 551.2689 m
355.9941 519.7468 336.8092 440.2585 y
370.386 424.4998 357.3604 381.3189 328.5844 368.9894 c
306.7469 359.6301 273.2532 377.3805 269.0148 401.1622 c
265.9207 418.5191 274.9701 432.0239 286.7828 443.6826 c
182.6252 477.2672 166.8664 492.335 v
158.6493 495.0728 162.7514 481.3718 v
166.8664 467.6657 243.6143 248.3878 y
379.9746 244.2728 l
411.9052 244.2728 l
548.2759 248.3878 l
625.0263 467.6657 629.131 481.3718 v
633.246 495.0728 625.0263 492.335 y
609.2629 477.2672 505.1001 443.6826 y
516.9251 432.0239 525.9617 418.5191 522.8759 401.1622 c
518.6349 377.3805 485.1458 359.6301 463.3057 368.9894 c
434.5219 381.3189 421.5015 424.4998 455.0814 440.2585 c
435.8934 519.7468 405.7382 551.2689 v
395.9451 560.1749 l
386.1422 551.2689 l
f
0.138033 0.563195 0.930968 0 0.807843 0.541176 0.160784 Xa
394.4861 545.5827 m
F
394.1815 234.814 m
F
395.1698 234.6477 m
F
1 Ap
0.017884 0.382818 0.888579 0 0.921569 0.701961 0.227451 Xa
558.0626 227.9663 m
558.0626 219.8272 551.4618 213.231 543.3278 213.231 C
244.5632 213.231 L
236.4246 213.231 229.8259 219.8272 229.8259 227.9663 C
229.8259 227.9663 L
229.8259 236.1003 236.4246 242.7011 244.5632 242.7011 C
543.3278 242.7011 L
551.4618 242.7011 558.0626 236.1003 558.0626 227.9663 C
558.0626 227.9663 L
f
0 Ap
0.138033 0.563195 0.930968 0 0.807843 0.541176 0.160784 Xa
172.959 467.3446 m
177.6642 463.527 L
179.3032 462.3574 181.063 461.3737 182.7448 460.2899 C
184.406 459.1802 186.2975 458.419 188.0521 457.4509 C
189.8171 456.4924 191.6626 455.6905 193.5133 454.9092 C
197.1718 453.245 200.9667 451.8833 204.7259 450.4663 C
216.1605 446.5331 L
239.1098 438.8432 L
242.9196 437.4712 246.8125 436.5283 250.6776 435.4594 C
262.276 432.2977 L
262.3291 432.2822 L
263.2571 432.0302 263.8039 431.0821 263.5617 430.1542 C
262.1603 424.7839 260.3751 419.5344 258.5265 414.4714 C
256.588 409.3887 255.2036 404.3406 254.4601 399.2574 C
254.1952 394.2098 254.538 389.0863 256.714 384.4018 C
257.7323 381.9712 258.5875 379.7777 260.1382 377.4379 C
261.4616 374.9919 263.0273 372.9697 264.5604 370.9177 C
266.0305 368.8145 267.9923 366.9741 269.6761 364.9871 C
271.628 363.2474 273.4508 361.3415 275.5411 359.7681 C
277.6412 358.2045 279.6685 356.5356 281.9679 355.2849 C
284.1537 353.8375 286.4888 352.6829 288.8713 351.629 C
293.5915 349.4808 298.6267 348.0892 303.9217 347.136 C
308.8531 346.4399 314.1304 346.2989 319.1857 347.1964 C
324.226 348.099 329.2333 349.5666 333.7217 352.1231 C
336.0764 353.192 338.0984 354.8362 340.2621 356.2381 C
342.1804 357.9628 344.3337 359.4505 346.0031 361.4473 C
349.7195 365.078 352.5058 369.5358 355.017 374.0691 C
357.2633 378.749 359.1469 383.6556 360.0697 388.8039 C
360.7255 391.3403 360.758 393.978 361.1412 396.5599 C
361.1665 399.0054 361.247 401.9756 360.899 404.3308 C
360.3646 409.3887 358.7814 414.4011 356.58 419.1812 C
354.4397 424.0424 351.7364 428.6262 349.2532 433.6139 C
348.6175 434.8744 348.0325 436.2309 347.5765 437.7589 C
347.1856 439.3777 347.1727 441.1323 347.5311 442.6603 C
348.2395 445.6909 349.4144 448.0611 350.413 450.628 C
350.3598 450.4818 L
351.8098 454.3242 353.126 458.2574 354.6865 462.0094 C
359.3535 473.2344 L
363.9322 484.51 L
364.6634 486.4009 365.4503 488.2717 366.464 490.062 C
369.3004 495.5031 L
371.2141 499.1089 373.0245 502.785 375.0188 506.3196 C
381.0299 516.9043 L
392.8374 538.1846 L
389.2749 530.9084 385.8508 523.5206 382.089 516.3399 C
376.5189 505.5228 L
374.6733 501.9123 373.0473 498.2311 371.3024 494.6004 C
368.7283 489.1444 L
367.8153 487.3593 367.1017 485.4632 366.4036 483.5521 C
362.1094 472.1706 L
357.7171 460.8093 L
356.2547 457.0321 355.1001 453.2351 353.7741 449.4579 C
353.7209 449.3066 L
352.8033 446.8052 351.6761 444.2084 351.2247 441.9239 C
350.6825 439.7257 351.5046 437.8342 352.7878 435.4238 C
355.2488 430.7496 358.204 426.0397 360.5437 421.0071 C
362.9139 415.9539 364.7269 410.5128 365.377 404.7692 C
365.7808 401.7386 365.7101 399.2729 365.6998 396.2923 C
365.3243 393.5039 365.2913 390.6649 364.6185 387.9214 C
363.6601 382.3595 361.6808 377.0191 359.2729 371.9158 C
356.595 366.9591 353.5799 362.0876 349.5506 358.0635 C
347.7325 355.8751 345.3979 354.1959 343.2901 352.2997 C
340.9303 350.716 338.7011 348.9108 336.114 347.6854 C
331.1646 344.8417 325.6228 343.117 320.0181 342.1085 C
314.355 341.1703 308.6614 341.3216 302.8703 342.2242 C
297.5144 343.228 292.0032 344.786 286.8668 347.1711 C
284.2875 348.3412 281.7763 349.6172 279.4315 351.1854 C
276.9658 352.5667 274.797 354.3673 272.558 356.0615 C
270.3319 357.7759 268.3903 359.8233 266.3228 361.7143 C
264.5077 363.8727 262.4954 365.7942 260.859 368.1489 C
259.1648 370.4586 257.4602 372.773 256.2121 375.1282 C
254.7575 377.3367 253.5673 380.1758 252.5309 382.7778 C
250.1736 388.0174 249.7197 394.0435 250.1432 399.7567 C
251.0861 405.4048 252.7756 410.8154 254.8277 415.8279 C
256.8297 420.9162 258.6556 425.9034 260.133 431.0119 C
261.4188 428.8684 L
249.7295 432.3632 L
245.8443 433.5483 241.9111 434.6069 238.154 436.0693 C
230.5875 438.7978 222.9049 441.5155 215.4241 444.4857 C
204.1233 448.8929 L
200.394 450.4767 196.6399 451.9995 193.014 453.8248 C
191.1814 454.6924 189.358 455.5748 187.6132 456.6184 C
185.8709 457.6626 184.0228 458.4996 182.389 459.7353 C
180.7376 460.925 179.0207 462.0192 177.4473 463.2802 C
172.959 467.3446 L
f
617.8795 467.3446 m
613.3912 463.2802 L
611.8178 462.0192 610.0982 460.925 608.4495 459.7353 C
606.8156 458.5048 604.965 457.6626 603.2253 456.6184 C
601.4805 455.5748 599.6551 454.6924 597.8245 453.83 C
594.1985 451.9995 590.4419 450.4818 586.7152 448.8981 C
575.4143 444.4857 L
567.931 441.5108 560.251 438.7978 552.6871 436.0693 C
548.9299 434.6121 544.9916 433.5483 541.1089 432.3632 C
529.4197 428.8684 L
530.7055 431.0119 L
532.1834 425.9034 534.0088 420.9162 536.0107 415.8279 C
538.0628 410.8154 539.7524 405.4048 540.6954 399.7567 C
541.1188 394.0435 540.6648 388.0174 538.305 382.7778 C
537.2712 380.1758 536.081 377.3367 534.6238 375.1282 C
533.3783 372.773 531.6737 370.4586 529.9795 368.1489 C
528.3405 365.789 526.3287 363.8676 524.5183 361.7143 C
522.4507 359.8233 520.504 357.7712 518.2805 356.0615 C
516.0415 354.3621 513.8732 352.5667 511.407 351.1854 C
509.0622 349.612 506.551 348.336 503.9691 347.1711 C
498.8307 344.786 493.324 343.228 487.9687 342.2242 C
482.1745 341.3216 476.4809 341.1703 470.8183 342.1085 C
465.2157 343.117 459.6739 344.8417 454.7219 347.6906 C
452.1348 348.9108 449.9062 350.716 447.5458 352.2997 C
445.438 354.1959 443.1034 355.8751 441.2827 358.0635 C
437.2539 362.0876 434.2383 366.9591 431.5655 371.9158 C
429.1551 377.0191 427.1732 382.3595 426.2154 387.9214 C
425.5446 390.6649 425.5095 393.5091 425.1361 396.2923 C
425.1212 399.2729 425.0556 401.7386 425.4589 404.7743 C
426.1095 410.5128 427.9194 415.9539 430.2896 421.0071 C
432.6298 426.0397 435.5845 430.7496 438.0455 435.4238 C
439.3313 437.8342 440.1534 439.7257 439.6086 441.9239 C
439.1599 444.2084 438.0305 446.8052 437.1124 449.3066 C
437.0623 449.4579 L
435.7358 453.2351 434.5812 457.0321 433.1188 460.8093 C
428.7265 472.1706 L
424.4302 483.5521 L
423.7342 485.4632 423.018 487.3593 422.1055 489.1444 C
419.5335 494.6004 L
417.7886 498.2311 416.16 501.9123 414.3144 505.5228 C
408.7474 516.3399 L
404.9804 523.5206 401.5615 530.9084 397.9959 538.1846 C
409.8013 516.9043 L
415.8171 506.3196 L
417.8088 502.785 419.6192 499.1089 421.5354 495.5031 C
424.3693 490.062 L
425.383 488.2717 426.1699 486.4009 426.9011 484.51 C
431.4798 473.2344 L
436.1494 462.0094 L
437.7078 458.2574 439.0235 454.3242 440.4709 450.4818 C
440.4204 450.628 L
441.419 448.0611 442.5938 445.6909 443.3048 442.6655 C
443.6632 441.1323 443.6477 439.3777 443.2599 437.7589 C
442.8009 436.2309 442.2158 434.8744 441.5806 433.6139 C
439.0994 428.6262 436.3967 424.0424 434.2533 419.1812 C
432.0499 414.4011 430.4713 409.3887 429.9317 404.3354 C
429.5888 401.9756 429.6694 399.0054 429.6895 396.5599 C
430.0778 393.978 430.1084 391.3403 430.7636 388.8039 C
431.6864 383.6603 433.5727 378.7537 435.8163 374.0691 C
438.328 369.5358 441.1164 365.078 444.8328 361.4473 C
446.5022 359.4505 448.6555 357.9628 450.5764 356.2433 C
452.74 354.8362 454.757 353.1972 457.1122 352.1231 C
461.6052 349.5666 466.6124 348.099 471.6502 347.1964 C
476.7081 346.2989 481.9829 346.4399 486.9148 347.136 C
492.2092 348.0892 497.2469 349.4808 501.9672 351.629 C
504.3471 352.6829 506.6822 353.8375 508.8706 355.2849 C
511.17 356.5356 513.1973 358.2045 515.3 359.7629 C
517.3877 361.3363 519.2084 363.2474 521.1649 364.9871 C
522.8488 366.9741 524.8054 368.8145 526.2782 370.9125 C
527.8112 372.9697 529.3743 374.9919 530.7003 377.4328 C
532.2536 379.7725 533.1061 381.9712 534.1244 384.3966 C
536.2978 389.0812 536.6459 394.2098 536.3789 399.2574 C
535.6374 404.3406 534.2504 409.3835 532.3094 414.4714 C
530.4633 419.5344 528.6782 424.7839 527.2768 430.1542 C
527.0346 431.0821 527.584 432.0302 528.5068 432.2822 C
528.5625 432.2977 L
540.1609 435.4594 L
544.0233 436.5283 547.9163 437.4712 551.7287 438.8432 C
574.678 446.5331 L
586.11 450.4663 L
589.8718 451.8884 593.6692 453.245 597.3252 454.9092 C
599.1759 455.6905 601.0214 456.4924 602.7864 457.4555 C
604.5415 458.419 606.4325 459.1853 608.0916 460.2899 C
609.7755 461.3737 611.5353 462.3574 613.1743 463.527 C
617.8795 467.3446 L
f
U
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(DESIGNED BY FREEPIK) Ln
0 A
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
